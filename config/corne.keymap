#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>


&mt {
    tapping-term-ms = <400>;
    retro-tap;
};

/ {
        combos {
            compatible = "zmk,combos";
            combo_btclr {
                timeout-ms = <500>;
                key-positions = <2 3 4>;
                bindings = <&bt BT_CLR>;
            };
            combo_tab {
                timeout-ms = <50>;
                key-positions = <0 1>;
                bindings = <&kp TAB>;
            };
        };
        behaviors {
            hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <300>;
                quick_tap_ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };
            qtab: qtab_mod {
                compatible = "zmk,behavior-mod-morph";
                label = "qtab";
                #binding-cells = <0>;
                bindings = <&kp Q>, <&kp LS(TAB)>;
                mods = <(MOD_LALT)>;
            };
            estab: estab_mod {
                compatible = "zmk,behavior-mod-morph";
                label = "estab";
                #binding-cells = <0>;
                bindings = <&kp E>, <&kp TAB>;
                mods = <(MOD_LALT)>;
            };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
//                    | ALT | LWR | ENT |   | RSE | SPC  | GUI |
                        bindings = <
   &qtab      &kp W      &estab      &kp R        &kp T        &kp Y  &kp U       &kp I       &kp O        &kp P    
   &hm LGUI A &hm LALT S &hm LCTRL D &hm LSHFT F  &kp G        &kp H  &hm LSHFT J &hm LCTRL K &hm LALT L   &hm LGUI SEMI
   &kp Z      &kp X      &kp C       &kp V        &kp B        &kp N  &kp M       &kp COMMA   &kp DOT      &kp FSLH 
                                  &mo 3  &mo 1  &kp RET        &mo 2 &kp SPACE &kp BSPC
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
//                    | ALT | LWR | ENT |   | RSE | SPC  | GUI |
                        bindings = <
   &kp ESC &kp N1  &kp N2  &kp N3 &kp LC(C)           &none     &kp LS(LC(HOME))  &kp LS(LC(END))   &none        &kp DEL
   &none   &kp N4  &kp N5  &kp N6 &kp LC(V)           &none     &kp LEFT          &kp DOWN          &kp UP       &kp RIGHT
   &kp N0  &kp N7  &kp N8  &kp N9 &kp LG(LS(A))       &kp C_PP  &kp C_VOL_DN      &kp C_VOL_UP      &kp C_MUTE   &none
                      &none  &none  &kp RET           &none  &none  &kp BSPC 
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
//                    | ALT | LWR | ENT |   | RSE | SPC  | GUI |
                        bindings = <
   &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT        &kp CARET &kp AMPS  &kp STAR &kp LPAR &kp RPAR   
   &none    &none  &none    &none    &kp GRAVE        &kp MINUS &kp EQUAL &kp PIPE &kp LBRC &kp RBRC
   &none    &none  &none    &kp FSLH &kp TILDE        &kp UNDER &kp PLUS  &kp BSLH &kp LBKT &kp RBKT
                         &none  &none  &kp RET        &none &none  &kp BSPC
                        >;
                };

                nav_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
//                    | ALT | LWR | ENT |   | RSE | SPC  | GUI |
                        bindings = <
   &out OUT_USB  &out OUT_BLE  &none         &none           &none               &kp F9  &kp F10 &kp F11 &kp F12 &kp DEL     
   &none         &none         &none         &none           &none               &kp F5  &kp F6  &kp F7  &kp F8  &hm DQT SQT 
   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4        &kp F1  &kp F2  &kp F3  &kp F4  &kp PSCRN   
                                                &none  &none  &kp RET           &none  &none &none
                        >;
                };
        };
};

